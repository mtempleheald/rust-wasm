[package]
name = "rust-wasm"
version = "0.1.0"
authors = ["Mark Temple-Heald <mtempleheald@hotmail.com>"]
description = "MTH Rust Wasm playground"
edition = "2018"
license = "MIT/Apache-2.0"
repository = "https://github.com/mtempleheald/rust-wasm"

# cdylib for wasm, rlib for unit testing
[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.63"
getrandom = {version = "0.2", features = ["js"] }     # dependency of rand
rand = "0.8.3"                                        # for generating default game universe

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

# WebGL required features
[dependencies.web-sys]
version = "0.3.4"
features = [
    'Document',
    'Element',
    'EventTarget',
    'HtmlCanvasElement',
    'MouseEvent',
    'WebGlBuffer',
    'WebGlProgram',
    'WebGlRenderingContext',
    'WebGlShader',
    'WebGlUniformLocation',
    'Window',
]

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"

